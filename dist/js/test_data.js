!function(n,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e=t();for(var o in e)("object"==typeof exports?exports:n)[o]=e[o]}}(window,(function(){return function(n){var t={};function e(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}return e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)e.d(o,r,function(t){return n[t]}.bind(null,r));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){"use strict";function o(){return[{left:0,top:0,width:0,height:0,colspan:8,rowspan:3,innerHTML:"\n    可以在初始化中指定默认参数\n<code>\n{\n    //指定容器横向被分为多少格（默认值为足够初始化的最小值）\n    ncols: 16,\n    //指定默认空白区域（默认全0）\n    space: { left: 2, right: 2, top: 4, bottom: 0 }, \n    //指定默认拖拽捕获区域（默认全0，表示除了空白外的区域可拖拽）\n    capture: { top: 0, right: 0, bottom: 0, left: 0 }\n}\n</code>\n    "},{left:0,top:0,width:0,height:0,col:9,row:0,colspan:7,rowspan:3,innerHTML:'\n                <br><button style="color:white;background-color:black;">只允许从该按钮上方拖拽</button>\n<code>\n{\n    col: 9,\n    row: 0,\n    colspan: 7,\n    rowspan: 4,\n    capture: (e, t) => t.target.tagName === "BUTTON"\n}\n</code>\n    ',capture:function(n,t){return"BUTTON"===t.target.tagName}},{left:0,top:0,width:0,height:0,colspan:4,rowspan:7,innerHTML:'\n                <span style="\n                display:block;\n                width:0;height:0;\n                z-index: 1000;\n                border: 20px solid;\n                border-color: aqua blue red green;\n                "></span>\n                （类似上图的区域划分）<br>\n                只能在以下区域拖拽<br>\n                (1):容器中心点和顶边做三角形<br>\n                (2):容器右侧边和距离右侧边 10px 的平行线做四边形<br>\n                (3):容器中心点和距离底部 10px 的平行线做三角形<br>\n                (3):容器左侧边和距离左侧边 10px 的平行线做四边形<br>\n<code>\n{\n    colspan: 4,\n    rowspan: 6,\n    capture: {\n        top: 0,\n        right: -10,\n        bottom: 10,\n        left: -10\n    }\n}\n</code>\n    ',capture:{top:0,right:-10,bottom:10,left:-10}},{left:0,top:0,width:0,height:0,colspan:4,rowspan:4,style:{border:"solid black",borderWidth:"10px 20px"},innerHTML:"\n    只能从该容器边框部分拖拽\n<code>\n{\n    colspan: 4,\n    rowspan: 4,\n    capture: {\n        top: -10,\n        right: -20,\n        bottom: -10,\n        left: -20\n    }\n}\n</code>\n    ",capture:{top:-10,right:-20,bottom:-10,left:-20}},{left:0,top:0,width:0,height:0,colspan:4,rowspan:5,innerHTML:"\n                单独指定空白区域:<br>\n                (1)顶部 20px ,底部 30px 为空白<br>\n                (2)左右两侧溢出贴合 space-right space-left 值为 2 的容器\n<code>\n{\n    colspan: 4,\n    rowspan: 5,\n    space: {\n        top: 20,\n        right: -2,\n        bottom: 30,\n        left: -2\n    }\n}\n</code>\n    ",space:{top:20,right:-2,bottom:30,left:-2}},{left:0,top:0,width:0,height:0,col:8,row:0,colspan:4,rowspan:3,innerHTML:'\n                不指定 "col" "row" 或指定了非法值会自动根据现有摆放状态自动选择合适位置放置\n<code>\n{\n    col:8,\n    row:0,\n    colspan: 4,\n    rowspan: 3\n}\n</code>\n    '}]}function r(){return{ncols:Math.min(window.innerWidth/70|0,16),space:{left:2,right:2,top:4,bottom:0},capture:{top:0,right:0,bottom:0,left:0}}}e.r(t),e.d(t,"get_models",(function(){return o})),e.d(t,"get_option",(function(){return r}))}])}));
//# sourceMappingURL=test_data.js.map